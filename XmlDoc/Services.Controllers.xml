<?xml version='1.0'?>
<!--Generated by xmldoc v12.4.1 on 26 JUN 2025 20:16:49-->
<doc>
  <assembly>
    <name>Services.Controllers</name>
  </assembly>
  <members>
    <member name="T:Services.Controllers.BridgeAPIController">
       <summary>
       BridgeAPI
       </summary>
       <remarks>
       Custom coded endpoints for interface BridgeAPI
       </remarks>
    </member>
    <member name="M:Services.Controllers.BridgeAPIController.#ctor(Services.Controllers.BridgeAPIService,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructor
       </summary>
       <param name="aBridgeAPIService">BridgeAPIService instance provided via dependency injection</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.BridgeAPIController.GetCustomer(BridgeAPI.GetCustomer_Request)">
       <summary>
         Get a customer
       </summary>
       <remarks>
         The functinality of this endpoint is based on custom code in the underlying application. 
       </remarks>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
       <returns>Returns OK or ERROR</returns>
    </member>
    <member name="M:Services.Controllers.BridgeAPIController.GetEnvironment">
       <summary>
         Display the servers Synergy environment
       </summary>
       <remarks>
         The functinality of this endpoint is based on custom code in the underlying application. 
       </remarks>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
       <returns>Return value OK or ERROR</returns>
    </member>
    <member name="M:Services.Controllers.BridgeAPIController.GetLogicalName(BridgeAPI.GetLogicalName_Request)">
       <summary>
         Get the value of a server environment variable
       </summary>
       <remarks>
         The functinality of this endpoint is based on custom code in the underlying application. 
       </remarks>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
       <returns>Return value OK or ERROR</returns>
    </member>
    <member name="M:Services.Controllers.BridgeAPIController.LoremIpsumBridge(BridgeAPI.LoremIpsumBridge_Request)">
       <summary>
         A test method that returns Lorem Ipsum data
       </summary>
       <remarks>
         The functinality of this endpoint is based on custom code in the underlying application. 
       </remarks>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
       <returns>Returns OK or ERROR</returns>
    </member>
    <member name="M:Services.Controllers.BridgeAPIController.StuckProcessTest(BridgeAPI.StuckProcessTest_Request)">
       <summary>
         Test for the stuck process detection code
       </summary>
       <remarks>
         The functinality of this endpoint is based on custom code in the underlying application. 
       </remarks>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
       <returns>Returns OK or ERROR</returns>
    </member>
    <member name="M:Services.Controllers.BridgeAPIService.BridgeAPIServiceCustom">
       <summary>
       Partial method to allow custom constrctor code.
       </summary>
       <param name="services"></param>
    </member>
    <member name="M:Services.Controllers.BridgeAPIService.#ctor(Harmony.Core.Context.IDynamicCallConnection)">
       <summary>
       Constructor
       </summary>
    </member>
    <member name="M:Services.Controllers.BridgeAPIService.GetCustomer(BridgeAPI.GetCustomer_Request)">
       <summary>
       Get a customer
       </summary>
    </member>
    <member name="M:Services.Controllers.BridgeAPIService.GetEnvironment">
       <summary>
       Display the servers Synergy environment
       </summary>
    </member>
    <member name="M:Services.Controllers.BridgeAPIService.GetLogicalName(BridgeAPI.GetLogicalName_Request)">
       <summary>
       Get the value of a server environment variable
       </summary>
    </member>
    <member name="M:Services.Controllers.BridgeAPIService.LoremIpsumBridge(BridgeAPI.LoremIpsumBridge_Request)">
       <summary>
       A test method that returns Lorem Ipsum data
       </summary>
    </member>
    <member name="M:Services.Controllers.BridgeAPIService.StuckProcessTest(BridgeAPI.StuckProcessTest_Request)">
       <summary>
       Test for the stuck process detection code
       </summary>
    </member>
    <member name="T:Services.Controllers.CustomersController">
       <summary>
       Customer record
       </summary>
       <remarks>
       OData endpoints for Customer record
       </remarks>
    </member>
    <member name="M:Services.Controllers.CustomersController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of CustomersController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomers">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomersByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="355232">Customer number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomersByState(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key State
       </summary>
       <remarks>
      
       </remarks>
       <param name="aState" example="MO">State</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomersByZip(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Zip
       </summary>
       <remarks>
      
       </remarks>
       <param name="aZipCode" example="64127">Zip code</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomersByPaymentTerms(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key PaymentTerms
       </summary>
       <remarks>
      
       </remarks>
       <param name="aPaymentTermsCode" example="30">Payment terms code</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="T:Services.Controllers.ItemsController">
       <summary>
       Item master record
       </summary>
       <remarks>
       OData endpoints for Item master record
       </remarks>
    </member>
    <member name="M:Services.Controllers.ItemsController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of ItemsController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItems">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemsByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aItemNumber" example="19">Item number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemsByVendorNumber(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key VendorNumber
       </summary>
       <remarks>
      
       </remarks>
       <param name="aVendorNumber" example="41">Vendor number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemsByColor(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key Color
       </summary>
       <remarks>
      
       </remarks>
       <param name="aFlowerColor" example="Red">Flower color</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemsBySize(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Size
       </summary>
       <remarks>
      
       </remarks>
       <param name="aSize" example="5">Size in gallons</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemsByName(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key Name
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCommonName" example="European Hackberry">Common name</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="T:Services.Controllers.OrderItemsController">
       <summary>
       Order items
       </summary>
       <remarks>
       OData endpoints for Order items
       </remarks>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of OrderItemsController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItems">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItemsByPK(System.Int32,System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="5238">Order number</param>
       <param name="aItemNumber" example="1">Line item number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItemsByItemOrdered(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key ItemOrdered
       </summary>
       <remarks>
      
       </remarks>
       <param name="aItemOrdered" example="21">Item ordered</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItemsByDateShipped(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key DateShipped
       </summary>
       <remarks>
      
       </remarks>
       <param name="aDateShipped" example="2018-03-17">Date shipped</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItemsByInvoiceNumber(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key InvoiceNumber
       </summary>
       <remarks>
      
       </remarks>
       <param name="aInvoiceNumber" example="166825">Invoice number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="T:Services.Controllers.OrdersController">
       <summary>
       Orders
       </summary>
       <remarks>
       OData endpoints for Orders
       </remarks>
    </member>
    <member name="M:Services.Controllers.OrdersController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of OrdersController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrders">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrdersByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="162512">Order number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrdersByCustomerNumber(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key CustomerNumber
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="622822">Customer number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrdersByDateOrdered(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key DateOrdered
       </summary>
       <remarks>
      
       </remarks>
       <param name="aDateOrdered" example="2018-03">Date ordered</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrdersByDateCompleted(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key DateCompleted
       </summary>
       <remarks>
      
       </remarks>
       <param name="aDateCompleted" example="2018-03-12">Date order completed</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="T:Services.Controllers.VendorsController">
       <summary>
       Vendor record
       </summary>
       <remarks>
       OData endpoints for Vendor record
       </remarks>
    </member>
    <member name="M:Services.Controllers.VendorsController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of VendorsController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendors">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendorsByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aVendorNumber" example="39">Vendor number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendorsByState(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key State
       </summary>
       <remarks>
      
       </remarks>
       <param name="aState" example="NH">State</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendorsByZip(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Zip
       </summary>
       <remarks>
      
       </remarks>
       <param name="aZipCode" example="03214">Zip Code</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendorsByPaymentTerms(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key PaymentTerms
       </summary>
       <remarks>
      
       </remarks>
       <param name="aPaymentTermsCode" example="60">Payment terms code</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200">OK. The operation completed successfully.</response>
       <response code="404">Not found. The entity being addressed does not exist.</response>
       <response code="500">Internal server error. Report the issue to the API maintainer.</response>
    </member>
  </members>
</doc>
